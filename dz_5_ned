#define _CRT_SECURE_NO_WARNINGS


#include <Windows.h>
#include <stdlib.h>
#include <cstdlib>
#include <stdio.h>


int str_cmp(char* a, char* b)
{
	int k = 1;
	for (int i = 0; a[i] != '\0' || b[i] != '\0'; ++i)
	{
		if (a[i] != b[i])
		{
			k = 0;
			break;
		}
	}
	return k;// если слова равны то 1
}

void check_con_graph(char*** graph, int* str_len, char** mass, int mass_len, int graph_len)
{

	int* check = (int*)malloc(sizeof(int) * mass_len);
	memset(check, 0, sizeof(int) * mass_len);
	check[0] = 1;
	int k = 1;// если все элементы проверены то = 0

	int z = 0;
	
	while (k && z <= graph_len)
	{
		for (int i = 0; i < graph_len; ++i)
		{
			if (str_cmp(graph[i][0], mass[z]))
			{
				for (int j = 1; j <= str_len[i]; j++) 
					for (int g = 0; g < mass_len; g++)
					{
						if (str_cmp(graph[i][j], mass[g]))
						{
							check[g] = 1;
						}
					}
				check[z] = 2;
			}
		}

		k = 0;
		for (int i = 0; i < mass_len; i++)
		{
			if (check[i] == 1) k = 1;
		}
		
		z++;
	}

	int svyaz = 1;
	for (int i = 0; i < mass_len; i++)
	{
		if (check[i] == 0) svyaz = 0;
	}

	if (svyaz) printf("Это связный граф\n\n");
	else printf("Это не связный граф\n\n");
}

char** kek(int* mass_len, char** mass, char** str, int str_len)
{
	for (int i = 0; i <= str_len; ++i)
	{
		if (*mass_len == 0)
		{
			mass[*mass_len] = str[*mass_len];
			mass = (char**)realloc(mass, sizeof(char*) * (++ * mass_len + 1));
			mass[*mass_len] = (char*)malloc(sizeof(char));

		}
		else
		{
			int z = 1;
			for (int j = 0; j < *mass_len; ++j)
			{
				if (str_cmp(str[i], mass[j]))// 1 если равны
				{
					z = 0;
					break;
				}
			}

			if (z) // если узла str[i] еще нет в mass то записываем его 
			{
				mass[*mass_len] = str[i];
				mass = (char**)realloc(mass, sizeof(char*) * (++ * mass_len + 1));
				mass[*mass_len] = (char*)malloc(sizeof(char));
			}
		}


	}
	return mass;
}

char** get_strict_graph(int* num)
{
	*num = 0;
	//printf("Введите первым узел графа №%d, а затем его связи (пример a,b,c,d): ", graph_num);

	char** graph = (char**)malloc(sizeof(char*));
	char c = getchar();

	graph[*num] = (char*)malloc(sizeof(char));
	while (c != ';')
	{
		int k = 0;
		while (c != ',' && c != ';')
		{

			graph[*num][k] = c;

			graph[*num] = (char*)realloc(graph[*num], sizeof(char) * (++k + 1));


			c = getchar();

		}
		graph[*num][k] = '\0';

		if (c == ';')
			break;

		graph = (char**)realloc(graph, sizeof(char*) * (++ * num + 1));
		graph[*num] = (char*)malloc(sizeof(char));
		c = getchar();
	}


	return graph;
}

int main()
{
	SetConsoleCP(1251);
	SetConsoleOutputCP(1251);

	char file_name[] = "C:\\Users\\aleks\\Desktop\\graph\\graph.dot";




	char*** graph = (char***)malloc(sizeof(char**));
	int* graph_len = (int*)malloc(sizeof(int));

	printf("Ввести узел графа?\n\nДа - 1\n\nНет - 0\n\nОтвет: ");
	int answ;
	scanf("%d", &answ);

	FILE* file = NULL;

	if (answ == 1)
	{
		if (!(file = fopen(file_name, "w")))
		{
			perror("fopen");
			system("pause");
			system("cls");
			return NULL;
		}

		fprintf(file, "graph\n{");
	}

	char** mass = (char**)malloc(sizeof(char*));
	mass[0] = (char*)malloc(sizeof(char));
	int mass_len = 0;


	int i = 0;
	while (answ)
	{
		if (answ == 1)
		{
			while (getchar() != '\n');
			system("cls");
			printf("Введите первым узел графа, а затем его связи (пример a,b,c,d;)\n\nВвод: ");
			graph[i] = get_strict_graph(&graph_len[i]);

			mass = kek(&mass_len, mass, graph[i], graph_len[i]);

			graph_len = (int*)realloc(graph_len, sizeof(int) * (i + 2));
			graph = (char***)realloc(graph, sizeof(char**) * (i + 2));

			for (int j = 0; j <= graph_len[i]; ++j)
			{
				if (j == 0)
				{
					fprintf(file, "\n%s -- {", graph[i][j]);
				}
				else if (j != graph_len[i])
				{
					fprintf(file, "%s ", graph[i][j]);
				}
				else
				{
					fprintf(file, "%s};", graph[i][j]);
				}
			}
			++i;
			printf("\nВвести еще один узел графа?\n\nДа - 1\n\nНет - 0\n\nОтвет: ");
			scanf("%d", &answ);

			if (!answ)
			{
				fprintf(file, "\n}");
				fclose(file);

				check_con_graph(graph, graph_len, mass, mass_len, i); // ??

				system("dot -Tpng C:\\Users\\aleks\\Desktop\\graph\\graph.dot -o C:\\Users\\aleks\\Desktop\\graph\\graph.png");
				system("C:\\Users\\aleks\\Desktop\\graph\\graph.png");
				system("pause");

			}
		}
		else
		{
			while (getchar() != '\n');
			printf("\nТакой команды нет!\n\nПопробуйте еще раз!\n\n");
			system("pause");
			system("cls");
			printf("Ввести узел графа?\n\nДа - 1\n\nНет - 0\n\nОтвет: ");
			scanf("%d", &answ);
		}

	}

	return 0;
}
